//HintName: TestEndpoint.g.cs
// <auto-generated/>
#nullable enable
using System.Net;
using System.Net.Http;
using System.Runtime.CompilerServices;
using Cabazure.Client;
using Cabazure.Client.Builder;
using TypeAlias = System.Text.Json.Nodes.JsonArray;

[CompilerGenerated]
internal partial class TestEndpoint : ITestEndpoint
{
    private readonly IHttpClientFactory factory;
    private readonly IMessageRequestFactory requestFactory;

    public TestEndpoint(
        IHttpClientFactory factory,
        IMessageRequestFactory requestFactory)
    {
        this.factory = factory;
        this.requestFactory = requestFactory;
    }

    public async Task<EndpointResponse> ExecuteAsync(
        TypeAlias body,
        ClientRequestOptions options,
        CancellationToken cancellationToken)
    {
        var client = factory.CreateClient("ClientName");

        using var requestMessage = requestFactory
            .FromTemplate("ClientName", "/items")
            .WithBody(body)
            .WithRequestOptions(options)
            .Build(HttpMethod.Get);

        using var response = await client
            .WithRequestOptions(options)
            .SendAsync(requestMessage, cancellationToken);

        return await requestFactory
            .FromResponse("ClientName", response)
            .AddSuccessResponse(HttpStatusCode.OK)
            .GetAsync(cancellationToken);
    }
}
#nullable disable
